{"ast":null,"code":"var _jsxFileName = \"/home/madhav/Desktop/Codekul/React/my-redux/src/Counter.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Counter(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Counter Component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Count value is : \", props.count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true);\n}\n\n_c = Counter;\n\nconst mapStateToProps = state => {\n  return {\n    count: state.counterReducer\n  };\n};\n\nexport default connect(mapStateToProps)(Counter);\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["/home/madhav/Desktop/Codekul/React/my-redux/src/Counter.js"],"names":["React","connect","Counter","props","count","mapStateToProps","state","counterReducer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;;;;AAEE,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACxB,sBACG;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,sCAAqBA,KAAK,CAACC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADH;AAMD;;KAPUF,O;;AAUX,MAAMG,eAAe,GAAEC,KAAD,IAAS;AAC7B,SAAM;AACJF,IAAAA,KAAK,EAAEE,KAAK,CAACC;AADT,GAAN;AAGD,CAJD;;AAOA,eAAeN,OAAO,CAACI,eAAD,CAAP,CAAyBH,OAAzB,CAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\n\n  function Counter(props) {\n  return (\n     <>\n       <h2>Counter Component</h2>\n       <p>Count value is : {props.count}</p>\n     </>\n    )\n}\n\n\nconst mapStateToProps=(state)=>{\n  return{\n    count: state.counterReducer\n  }\n}\n\n\nexport default connect(mapStateToProps)(Counter)"]},"metadata":{},"sourceType":"module"}